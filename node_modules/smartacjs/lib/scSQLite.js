/**
 * Copyright © 2015 Smartac Inc. All rights reserved.
 * SQLite数据库连接类
 * Created by Simon on 2016/1/15.
 */
var sc = require('./scCommon');
var generic_pool=require('generic-pool');
var path=require('path');
var g_index=0;
var db;

function SQLiteDBConnection(file)
{
    if (db===undefined){
        db=require("sqlite");
    }
    this._file=file;
    this.name=path.basename(file,".db");
    this.log=sc.createNamedLog(this.name,g_index++);
    var self=this;
    this._object=new db.Database(file,db.OPEN_READWRITE | db.OPEN_CREATE,function(err){
        if (err){
            self.log.error('FAIL on creating database ' + err);
        }
    });
}

SQLiteDBConnection.prototype._queryOneSQL=function(sql,timeout)
{
    var self=this;
    return new Promise(function(resolve, reject) {
        var tick = new Date();
        self._object.all(sql, function (err, rows) {
            var now = new Date();
            var timediff = now.getTime() - tick.getTime();
            if (err) {
                self.log.error("Query error,used time:%d ms,error=%s,sql=%s", timediff, err, JSON.stringify(sql));
                reject(err);
            } else {
                self.log.log("Query success,used time:%d ms,sql=%s", timediff, JSON.stringify(sql));
                resolve(rows);
            }
        });
    });
}
// 查询数据库
SQLiteDBConnection.prototype.query = function (sql, timeout) {
    var self=this;
    return new Promise(function(resolve, reject) {
        if (typeof(sql)=='string')
        {
            return self._queryOneSQL(sql,timeout).then(function(rows){
                resolve(rows);
            }).catch(function(err){
                reject(err);
            });
        }
        else if (sql instanceof (Array))
        {
            Promise.reduce(sql,function(arr,sql)
            {
                return self._queryOneSQL(sql,timeout).then(function(rows){
                    arr.push(rows);
                }).catch(function(err){
                    arr.push(err);
                });
            },[]).then(function(rows){
                resolve(rows);
            });
        }
        else
        {
            reject(new Error("unknow sql"));
        }
    });
}
// 优雅关闭连接
SQLiteDBConnection.prototype.end = function () {
    if (this._object) {
        this._object.close();
        this._object=null;
        this.log.info("close");
    }
}
// 销毁连接(立即断开连接)
SQLiteDBConnection.prototype.destroy = SQLiteDBConnection.prototype.end;
/**
 * 空释放
 */
function releaseNothing()
{
    console.warn("[SQLite] nothing to release!")
}
SQLiteDBConnection.prototype.release=releaseNothing;


function SQLiteDBConnectionPool(file,max)
{
    if (!!!max) max=10;
    file=sc.formatString(file);
    this._pool=generic_pool.Pool({
        name:file,
        create:function(callback){
            var conn=new SQLiteDBConnection(file);
            callback(null,conn);
        },
        destroy:function(conn){
            conn.destroy();
        },
        max:max,
        idleTimeoutMillis: 60*1000,  //超时时间
        log:false
    });
}
SQLiteDBConnectionPool.prototype.getConnection = function (name) {
    var self = this;
    return new Promise(function(resolve, reject) {
        if (self._pool)
        {
            try
            {
                self._pool.acquire(function(err,conn){
                    if (err)
                    {
                        console.warn("[SQLite] ConnectionPool getConnection[%s] failed!,error=%s",name,err);
                        reject(err);
                    }
                    else
                    {
                        conn.release=function()
                        {
                            if (conn._timeout)
                            {
                                clearTimeout(conn._timeout);
                                conn._timeout=null;
                            }
                            self._pool.release(conn);
                            conn.release=releaseNothing;
                        }
                        //如果是debug模式，那就开启检测是否release
                        if (sc.isDebug)
                        {
                            name = name || '';
                            function releaseError()
                            {
                                console.warn('SQLite[%s] No correct release connection!',name);
                            }

                            //1分钟仍没关闭句柄，则提示释放链接错误
                            conn._timeout = setTimeout(releaseError, 60000);
                        }
                        resolve(conn);
                    }
                });

            }
            catch(e)
            {
                console.error("[SQLite] ConnectionPool getConnection[%s] crash!,error=%s",name,e);
                reject(e);
            }
        }
        else {
            console.error("[SQLite] ConnectionPool getConnection[%s] failed!,error=ConnectionPool invalid!",name);
            reject(new Error("[SQLite] ConnectionPool invalid!"));
        }
    });

}


// 创建SQL连接
exports.createSQLiteConnection = function (file) {
    return new SQLiteDBConnection(file);
};
// 创建SQL连接池
exports.createSQLiteConnectionPool = function (file, max) {
    return new SQLiteDBConnectionPool(file,max);
};

// 设定SQLite3模块
exports.setSQLite3=function(sqlite){
    db=sqlite
};
//var a=exports.createSQLiteConnection("d:\\hello.db");
//a.query("CREATE TABLE IF NOT EXISTS notes (ts DATETIME, author VARCHAR(255), note TEXT)");
//a.query("INSERT INTO notes (ts,author) values('2000-2-2','asdlfajksdfl')");